{"version":3,"sources":["web/static/vendor/js/admin/active_admin_lib.js"],"names":[],"mappingsfile":"priv/static/js/active_admin_lib.js","sourcesContent":["// File: application.js.js\n// Generated by CoffeeScript 1.10.0\n(function() {\n  $(document).ready(function() {\n    var batch_actions_selector;\n    $(document).on('focus', '.datepicker:not(.hasDatepicker)', function() {\n      var defaults, options;\n      defaults = {\n        dateFormat: 'yy-mm-dd'\n      };\n      options = $(this).data('datepicker-options');\n      return $(this).datepicker($.extend(defaults, options));\n    });\n    $('.clear_filters_btn').click(function() {\n      var params, regex;\n      params = window.location.search.split('&');\n      regex = /^(q\\[|q%5B|q%5b|page|commit)/;\n      return window.location.search = \"\";\n    });\n    $('.filter_form').submit(function() {\n      return $(this).find(':input').filter(function() {\n        return this.value === '';\n      }).prop('disabled', true);\n    });\n    $('.filter_form_field.select_and_search select').change(function() {\n      return $(this).siblings('input').prop({\n        name: \"q[\" + this.value + \"]\"\n      });\n    });\n    if ((batch_actions_selector = $('.table_tools .batch_actions_selector')).length) {\n      return batch_actions_selector.next().css({\n        width: \"calc(100% - 10px - \" + (batch_actions_selector.outerWidth()) + \"px)\",\n        'float': 'right'\n      });\n    }\n  });\n\n}).call(this);\n\n\n// File: base.js.js\n// Generated by CoffeeScript 1.10.0\n(function() {\n  window.ActiveAdmin = {};\n\n}).call(this);\n\n\n// File: batch_actions.js.js\n// Generated by CoffeeScript 1.10.0\n(function() {\n  $(document).on('ready page:load', function() {\n    $('#batch_actions_selector li a').click(function(e) {\n      var message, r;\n      e.stopPropagation();\n      e.preventDefault();\n      console.log('clicked it');\n      if (message = $(this).data('confirm')) {\n        r = window.confirm(message);\n        if (r === true) {\n          return $(this).trigger('confirm:complete', $(this).data('inputs'));\n        }\n      } else {\n        return $(this).trigger('confirm:complete');\n      }\n    });\n    $('#batch_actions_selector li a').on('confirm:complete', function(e, inputs) {\n      var val;\n      if (val = JSON.stringify(inputs)) {\n        $('#batch_action_inputs').val(val);\n      } else {\n        $('#batch_action_inputs').attr('disabled', 'disabled');\n      }\n      $('#batch_action').val($(this).data('action'));\n      return $('#collection_selection').submit();\n    });\n    if ($(\"#batch_actions_selector\").length && $(\":checkbox.toggle_all\").length) {\n      if ($(\".paginated_collection\").find(\"table.index_table\").length) {\n        $(\".paginated_collection table\").tableCheckboxToggler();\n      } else {\n        $(\".paginated_collection\").checkboxToggler();\n      }\n      return $(\".paginated_collection\").find(\":checkbox\").bind(\"change\", function() {\n        if ($(\".paginated_collection\").find(\":checkbox\").filter(\":checked\").length > 0) {\n          return $(\"#batch_actions_selector\").aaDropdownMenu(\"enable\");\n        } else {\n          return $(\"#batch_actions_selector\").aaDropdownMenu(\"disable\");\n        }\n      });\n    }\n  });\n\n}).call(this);\n\n\n// File: checkbox-toggler.js.js\n// Generated by CoffeeScript 1.10.0\n(function() {\n  ActiveAdmin.CheckboxToggler = (function() {\n    function CheckboxToggler(options, container) {\n      var defaults;\n      this.options = options;\n      this.container = container;\n      defaults = {};\n      this.options = $.extend(defaults, this.options);\n      this._init();\n      this._bind();\n    }\n\n    CheckboxToggler.prototype._init = function() {\n      if (!this.container) {\n        throw new Error('Container element not found');\n      } else {\n        this.$container = $(this.container);\n      }\n      if (!this.$container.find('.toggle_all').length) {\n        throw new Error('\"toggle all\" checkbox not found');\n      } else {\n        this.toggle_all_checkbox = this.$container.find('.toggle_all');\n      }\n      return this.checkboxes = this.$container.find(':checkbox').not(this.toggle_all_checkbox);\n    };\n\n    CheckboxToggler.prototype._bind = function() {\n      this.checkboxes.change((function(_this) {\n        return function(e) {\n          return _this._didChangeCheckbox(e.target);\n        };\n      })(this));\n      return this.toggle_all_checkbox.change((function(_this) {\n        return function() {\n          return _this._didChangeToggleAllCheckbox();\n        };\n      })(this));\n    };\n\n    CheckboxToggler.prototype._didChangeCheckbox = function(checkbox) {\n      switch (this.checkboxes.filter(':checked').length) {\n        case this.checkboxes.length - 1:\n          return this.toggle_all_checkbox.prop({\n            checked: null\n          });\n        case this.checkboxes.length:\n          return this.toggle_all_checkbox.prop({\n            checked: true\n          });\n      }\n    };\n\n    CheckboxToggler.prototype._didChangeToggleAllCheckbox = function() {\n      var setting;\n      setting = this.toggle_all_checkbox.prop('checked') ? true : null;\n      return this.checkboxes.each((function(_this) {\n        return function(index, el) {\n          $(el).prop({\n            checked: setting\n          });\n          return _this._didChangeCheckbox(el);\n        };\n      })(this));\n    };\n\n    return CheckboxToggler;\n\n  })();\n\n  $.widget.bridge('checkboxToggler', ActiveAdmin.CheckboxToggler);\n\n}).call(this);\n\n\n// File: dropdown-menu.js.js\n// Generated by CoffeeScript 1.10.0\n(function() {\n  ActiveAdmin.DropdownMenu = (function() {\n    function DropdownMenu(options, element) {\n      var defaults;\n      this.options = options;\n      this.element = element;\n      this.$element = $(this.element);\n      defaults = {\n        fadeInDuration: 20,\n        fadeOutDuration: 100,\n        onClickActionItemCallback: null\n      };\n      this.options = $.extend(defaults, this.options);\n      this.isOpen = false;\n      this.$menuButton = this.$element.find('.dropdown_menu_button');\n      this.$menuList = this.$element.find('.dropdown_menu_list_wrapper');\n      this._buildMenuList();\n      this._bind();\n    }\n\n    DropdownMenu.prototype.open = function() {\n      this.isOpen = true;\n      this.$menuList.fadeIn(this.options.fadeInDuration);\n      this._position();\n      return this;\n    };\n\n    DropdownMenu.prototype.close = function() {\n      this.isOpen = false;\n      this.$menuList.fadeOut(this.options.fadeOutDuration);\n      return this;\n    };\n\n    DropdownMenu.prototype.destroy = function() {\n      this.$element.unbind();\n      this.$element = null;\n      return this;\n    };\n\n    DropdownMenu.prototype.isDisabled = function() {\n      return this.$menuButton.hasClass('disabled');\n    };\n\n    DropdownMenu.prototype.disable = function() {\n      return this.$menuButton.addClass('disabled');\n    };\n\n    DropdownMenu.prototype.enable = function() {\n      return this.$menuButton.removeClass('disabled');\n    };\n\n    DropdownMenu.prototype.option = function(key, value) {\n      if ($.isPlainObject(key)) {\n        return this.options = $.extend(true, this.options, key);\n      } else if (key != null) {\n        return this.options[key];\n      } else {\n        return this.options[key] = value;\n      }\n    };\n\n    DropdownMenu.prototype._buildMenuList = function() {\n      this.$nipple = $('<div class=\"dropdown_menu_nipple\"></div>');\n      this.$menuList.prepend(this.$nipple);\n      return this.$menuList.hide();\n    };\n\n    DropdownMenu.prototype._bind = function() {\n      $('body').click((function(_this) {\n        return function() {\n          if (_this.isOpen) {\n            return _this.close();\n          }\n        };\n      })(this));\n      return this.$menuButton.click((function(_this) {\n        return function() {\n          if (!_this.isDisabled()) {\n            if (_this.isOpen) {\n              _this.close();\n            } else {\n              _this.open();\n            }\n          }\n          return false;\n        };\n      })(this));\n    };\n\n    DropdownMenu.prototype._position = function() {\n      var button_center, button_left, button_right, centered_menu_left, centered_menu_right, menu_center, nipple_center, window_right;\n      this.$menuList.css('top', this.$menuButton.position().top + this.$menuButton.outerHeight() + 10);\n      button_left = this.$menuButton.position().left;\n      button_center = this.$menuButton.outerWidth() / 2;\n      button_right = button_left + button_center * 2;\n      menu_center = this.$menuList.outerWidth() / 2;\n      nipple_center = this.$nipple.outerWidth() / 2;\n      window_right = $(window).width();\n      centered_menu_left = button_left + button_center - menu_center;\n      centered_menu_right = button_left + button_center + menu_center;\n      if (centered_menu_left < 0) {\n        this.$menuList.css('left', button_left);\n        return this.$nipple.css('left', button_center - nipple_center);\n      } else if (centered_menu_right > window_right) {\n        this.$menuList.css('right', window_right - button_right);\n        return this.$nipple.css('right', button_center - nipple_center);\n      } else {\n        this.$menuList.css('left', centered_menu_left);\n        return this.$nipple.css('left', menu_center - nipple_center);\n      }\n    };\n\n    return DropdownMenu;\n\n  })();\n\n  $.widget.bridge('aaDropdownMenu', ActiveAdmin.DropdownMenu);\n\n  $(document).on('ready page:load', function() {\n    return $('.dropdown_menu').aaDropdownMenu();\n  });\n\n}).call(this);\n\n\n// File: flash.js.js\n// Generated by CoffeeScript 1.10.0\n(function() {\n  var Flash;\n\n  ActiveAdmin.flash = Flash = (function() {\n    Flash.error = function(message, close_after) {\n      return new this(message, \"error\", close_after);\n    };\n\n    Flash.notice = function(message, close_after) {\n      return new this(message, \"notice\", close_after);\n    };\n\n    Flash.prototype.reference = function() {\n      return this.reference;\n    };\n\n    function Flash(message1, type1, close_after) {\n      this.message = message1;\n      this.type = type1 != null ? type1 : \"notice\";\n      this.reference = jQuery(\"<div>\").addClass(\"flash flash_\" + type).text(message);\n      jQuery(\".flashes\").append(this.reference);\n      if (close_after != null) {\n        this.close_after(close_after);\n      }\n    }\n\n    Flash.prototype.close_after = function(close_after) {\n      return setTimeout((function(_this) {\n        return function() {\n          return _this.close();\n        };\n      })(this), close_after * 1000);\n    };\n\n    Flash.prototype.close = function() {\n      return this.reference.remove();\n    };\n\n    return Flash;\n\n  })();\n\n}).call(this);\n\n\n// File: has_many.js.js\n// Generated by CoffeeScript 1.10.0\n(function() {\n  var init_sortable, recompute_positions;\n\n  $(function() {\n    $(document).on('click', 'a.button.has_many_remove', function(e) {\n      var parent, to_remove;\n      e.preventDefault();\n      parent = $(this).closest('.has_many_container');\n      to_remove = $(this).closest('fieldset');\n      recompute_positions(parent);\n      parent.trigger('has_many_remove:before', [to_remove, parent]);\n      to_remove.remove();\n      return parent.trigger('has_many_remove:after', [to_remove, parent]);\n    });\n    $(document).on('click', 'a.button.has_many_add', function(e) {\n      var before_add, fieldset, html, index, parent, regex;\n      e.preventDefault();\n      parent = $(this).closest('.has_many_container');\n      parent.trigger(before_add = $.Event('has_many_add:before'), [parent]);\n      if (!before_add.isDefaultPrevented()) {\n        index = parent.data('has_many_index') || parent.children('fieldset').length - 1;\n        parent.data({\n          has_many_index: ++index\n        });\n        regex = new RegExp($(this).data('placeholder'), 'g');\n        html = $(this).data('html').replace(regex, index);\n        fieldset = $(html).insertBefore(this);\n        recompute_positions(parent);\n        return parent.trigger('has_many_add:after', [fieldset, parent]);\n      }\n    });\n    $(document).on('change', '.has_many_container[data-sortable] :input[name$=\"[_destroy]\"]', function() {\n      return recompute_positions($(this).closest('.has_many'));\n    });\n    init_sortable();\n    return $(document).on('has_many_add:after', '.has_many_container', init_sortable);\n  });\n\n  init_sortable = function() {\n    var elems;\n    elems = $('.has_many_container[data-sortable]:not(.ui-sortable)');\n    elems.sortable({\n      items: '> fieldset',\n      handle: '> ol > .handle',\n      stop: recompute_positions\n    });\n    return elems.each(recompute_positions);\n  };\n\n  recompute_positions = function(parent) {\n    var input_name, position;\n    parent = parent instanceof jQuery ? parent : $(this);\n    input_name = parent.data('sortable');\n    position = parseInt(parent.data('sortable-start') || 0, 10);\n    return parent.children('fieldset').each(function() {\n      var destroy_input, sortable_input;\n      destroy_input = $(this).find(\"> ol > .input > :input[name$='[_destroy]']\");\n      sortable_input = $(this).find(\"> ol > .input > :input[name$='[\" + input_name + \"]']\");\n      if (sortable_input.length) {\n        return sortable_input.val(destroy_input.is(':checked') ? '' : position++);\n      }\n    });\n  };\n\n}).call(this);\n\n\n// File: modal_dialog.js.js\n// Generated by CoffeeScript 1.10.0\n(function() {\n  ActiveAdmin.modal_dialog = function(message, inputs, callback) {\n    var elem, html, klass, name, opts, ref, ref1, type, v, wrapper;\n    html = \"<form id=\\\"dialog_confirm\\\" title=\\\"\" + message + \"\\\"><ul>\";\n    for (name in inputs) {\n      type = inputs[name];\n      if (/^(datepicker|checkbox|text)$/.test(type)) {\n        wrapper = 'input';\n      } else if (type === 'textarea') {\n        wrapper = 'textarea';\n      } else if ($.isArray(type)) {\n        ref = ['select', 'option', type, ''], wrapper = ref[0], elem = ref[1], opts = ref[2], type = ref[3];\n      } else {\n        throw new Error(\"Unsupported input type: {\" + name + \": \" + type + \"}\");\n      }\n      klass = type === 'datepicker' ? type : '';\n      html += (\"<li>\\n<label>\" + (name.charAt(0).toUpperCase() + name.slice(1)) + \"</label>\\n<\" + wrapper + \" name=\\\"\" + name + \"\\\" class=\\\"\" + klass + \"\\\" type=\\\"\" + type + \"\\\">\") + (opts ? ((function() {\n        var i, len, results;\n        results = [];\n        for (i = 0, len = opts.length; i < len; i++) {\n          v = opts[i];\n          if ($.isArray(v)) {\n            results.push(\"<\" + elem + \" value=\" + v[1] + \">\" + v[0] + \"</\" + elem + \">\");\n          } else {\n            results.push(\"<\" + elem + \">\" + v + \"</\" + elem + \">\");\n          }\n        }\n        return results;\n      })()).join('') : '') + (\"</\" + wrapper + \">\") + \"</li>\";\n      ref1 = [], wrapper = ref1[0], elem = ref1[1], opts = ref1[2], type = ref1[3], klass = ref1[4];\n    }\n    html += \"</ul></form>\";\n    return $(html).appendTo('body').dialog({\n      modal: true,\n      dialogClass: 'active_admin_dialog',\n      buttons: {\n        OK: function() {\n          callback($(this).serializeObject());\n          return $(this).dialog('close');\n        },\n        Cancel: function() {\n          return $(this).dialog('close').remove();\n        }\n      }\n    });\n  };\n\n}).call(this);\n\n\n// File: per_page.js.js\n// Generated by CoffeeScript 1.10.0\n(function() {\n  ActiveAdmin.PerPage = (function() {\n    function PerPage(options, element) {\n      this.options = options;\n      this.element = element;\n      this.$element = $(this.element);\n      this._init();\n      this._bind();\n    }\n\n    PerPage.prototype._init = function() {\n      return this.$params = this._queryParams();\n    };\n\n    PerPage.prototype._bind = function() {\n      return this.$element.change((function(_this) {\n        return function() {\n          _this.$params['per_page'] = _this.$element.val();\n          delete _this.$params['page'];\n          return location.search = $.param(_this.$params);\n        };\n      })(this));\n    };\n\n    PerPage.prototype._queryParams = function() {\n      var m, params, query, re;\n      query = window.location.search.substring(1);\n      params = {};\n      re = /([^&=]+)=([^&]*)/g;\n      while (m = re.exec(query)) {\n        params[decodeURIComponent(m[1])] = decodeURIComponent(m[2]);\n      }\n      return params;\n    };\n\n    return PerPage;\n\n  })();\n\n  $.widget.bridge('perPage', ActiveAdmin.PerPage);\n\n  $(function() {\n    return $('.pagination_per_page select').perPage();\n  });\n\n}).call(this);\n\n\n// File: popover.js.js\n// Generated by CoffeeScript 1.10.0\n(function() {\n  ActiveAdmin.Popover = (function() {\n    function Popover(options1, element) {\n      var defaults;\n      this.options = options1;\n      this.element = element;\n      this.$element = $(this.element);\n      defaults = {\n        fadeInDuration: 20,\n        fadeOutDuration: 100,\n        autoOpen: true,\n        pageWrapperElement: \"#wrapper\",\n        onClickActionItemCallback: null\n      };\n      this.options = $.extend(defaults, options);\n      this.isOpen = false;\n      if (!(this.$popover = $(this.$element.attr('href'))).length) {\n        this.$popover = this.$element.next('.popover');\n      }\n      this._buildPopover();\n      this._bind();\n    }\n\n    Popover.prototype.open = function() {\n      this.isOpen = true;\n      this.$popover.fadeIn(this.options.fadeInDuration);\n      this._positionPopover();\n      this._positionNipple();\n      return this;\n    };\n\n    Popover.prototype.close = function() {\n      this.isOpen = false;\n      this.$popover.fadeOut(this.options.fadeOutDuration);\n      return this;\n    };\n\n    Popover.prototype.destroy = function() {\n      this.$element.removeData('popover');\n      this.$element.unbind();\n      this.$element = null;\n      return this;\n    };\n\n    Popover.prototype._buildPopover = function() {\n      this.$nipple = $('<div class=\"popover_nipple\"></div>');\n      this.$popover.prepend(this.$nipple);\n      this.$popover.hide();\n      return this.$popover.addClass('popover');\n    };\n\n    Popover.prototype._bind = function() {\n      $(this.options.pageWrapperElement).click((function(_this) {\n        return function() {\n          if (_this.isOpen) {\n            return _this.close();\n          }\n        };\n      })(this));\n      if (this.options.autoOpen) {\n        return this.$element.click((function(_this) {\n          return function(e) {\n            e.stopPropagation();\n            if (_this.isOpen) {\n              return _this.close();\n            } else {\n              return _this.open();\n            }\n          };\n        })(this));\n      }\n    };\n\n    Popover.prototype._positionPopover = function() {\n      var button_center, popover_center;\n      button_center = this.$element.offset().left + this.$element.outerWidth() / 2;\n      popover_center = this.$popover.outerWidth() / 2;\n      return this.$popover.css('left', button_center - popover_center);\n    };\n\n    Popover.prototype._positionNipple = function() {\n      this.$popover.css('top', this.$element.offset().top + this.$element.outerHeight() + 10);\n      return this.$nipple.css('left', this.$popover.outerWidth() / 2 - this.$nipple.outerWidth() / 2);\n    };\n\n    return Popover;\n\n  })();\n\n  $.widget.bridge('popover', ActiveAdmin.Popover);\n\n}).call(this);\n\n\n// File: table-checkbox-toggler.js.js\n// Generated by CoffeeScript 1.10.0\n(function() {\n  var extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },\n    hasProp = {}.hasOwnProperty;\n\n  ActiveAdmin.TableCheckboxToggler = (function(superClass) {\n    extend(TableCheckboxToggler, superClass);\n\n    function TableCheckboxToggler() {\n      return TableCheckboxToggler.__super__.constructor.apply(this, arguments);\n    }\n\n    TableCheckboxToggler.prototype._init = function() {\n      return TableCheckboxToggler.__super__._init.apply(this, arguments);\n    };\n\n    TableCheckboxToggler.prototype._bind = function() {\n      TableCheckboxToggler.__super__._bind.apply(this, arguments);\n      return this.$container.find('tbody td').click((function(_this) {\n        return function(e) {\n          if (e.target.type !== 'checkbox') {\n            return _this._didClickCell(e.target);\n          }\n        };\n      })(this));\n    };\n\n    TableCheckboxToggler.prototype._didChangeCheckbox = function(checkbox) {\n      var $row;\n      TableCheckboxToggler.__super__._didChangeCheckbox.apply(this, arguments);\n      $row = $(checkbox).parents('tr');\n      if (checkbox.checked) {\n        return $row.addClass('selected');\n      } else {\n        return $row.removeClass('selected');\n      }\n    };\n\n    TableCheckboxToggler.prototype._didClickCell = function(cell) {\n      return $(cell).parent('tr').find(':checkbox').click();\n    };\n\n    return TableCheckboxToggler;\n\n  })(ActiveAdmin.CheckboxToggler);\n\n  $.widget.bridge('tableCheckboxToggler', ActiveAdmin.TableCheckboxToggler);\n\n}).call(this);\n\n\n"]}